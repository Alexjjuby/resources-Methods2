# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "~/")
getwd()
knitr::opts_chunk$set(echo = TRUE)
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "~/")
getwd()
knitr::opts_chunk$set(echo = TRUE)
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "~/")
getwd()
# Make sure this guy is installed/updated (if you've alreadygot rstanarm installed, you just need to load it in using either library() or p_load() as below)
install.packages("rstanarm")
library(rstanarm)
# Load the rest
library(pacman)
pacman::p_load(tidyverse,
ggpubr,
ggplot2,
stringr) # this time I'm just giving you the code
knitr::opts_chunk$set(echo = TRUE)
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "~Documents/Methods_Assignment_2/resources-Methods2/classes")
getwd()
knitr::opts_chunk$set(echo = TRUE)
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "~Documents/Methods_Assignment_2/resources-Methods2/classes")
getwd()
knitr::opts_chunk$set(echo = TRUE)
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "~Documents/Methods_Assignment_2/resources-Methods2/classes")
getwd()
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "~/Documents/Methods_Assignment_2/resources-Methods2/classes")
# Load data
hibbs <- read.table("data/ElectionsEconomy/data/hibbs.dat", header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "~/Documents/Methods_Assignment_2/resources-Methods2/classes")
getwd()
# Load data
hibbs <- read.table("data/ElectionsEconomy/data/hibbs.dat", header = TRUE)
# Make scatterplot
plot(hibbs$growth, hibbs$vote, xlab="Average recent growth in personal income",
ylab="Incumbent party's vote share")
# Estimate regression y = a + bx + error
M1 <- stan_glm(vote ~ growth, data=hibbs)
# Add a fitted line to the graph
abline(coef(M1), col="gray") # needs to be run with the plot() code above - running the whole chunk is the easiest way
# Display the fitted model
print(M1)
knitr::opts_chunk$set(echo = TRUE)
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "~/")
getwd()
# Basic plot with ggplot2
ggplot(hibbs, aes(x = growth, y = vote)) +
geom_point() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
my_simulated_data <- rnorm(n = 100, mean = 30, sd = 18)
print(my_simulated_data)
# Basic plot with ggplot2
my_simulated_data %>% ggplot(hibbs, aes(x = growth, y = vote)) +
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = growth, y = vote)) +
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
my_simulated_data[] <- rnorm(n = 100, mean = 30, sd = 18)
print(my_simulated_data)
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
my_simulated_data <- data.frame(rnorm(n = 100, mean = 30, sd = 18))
print(my_simulated_data)
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = growth, y = vote)) +
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x, y)) +
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data)+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x,y))+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = rnorm.n...100..mean...30..sd...18.,y))+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = rnorm.n...100..mean...30..sd...18.,y = 'value'))+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = 'value'))+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = 'value',))+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = my_simulate_data ,y = 'value',))+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# your code here
my_simulated_data <- data.frame(asdf = rnorm(n = 100, mean = 30, sd = 18))
print(my_simulated_data)
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = my_simulate_data ,y = 'value',))+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf ,y = 'value',))+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf ,y = 'n',))+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf ,y = 'n',))+
geom_histogram() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
```
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf ,y = 'n',))+
geom_histogram() +  # Add points
theme_minimal() +  # Use a minimal theme
```
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = 'asdf' ,y = 'n',))+
geom_histogram() +  # Add points
theme_minimal() +  # Use a minimal theme
```
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf ,y = 'n',))+
geom_histogram(
stat = 'summary',
fun = mean,
width = 0.5
) +  # Add points
theme_minimal() +  # Use a minimal theme
```
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf ,y = 'n',))+
geom_histogram(
stat = 'summary',
fun = mean,
width = 0.5
) +  # Add points
theme_minimal() +  # Use a minimal theme
my_simulated_data <- mutate(ordinal_nr = row_number())
my_simulated_data <- mutate(ordinal_nr = row_number)
my_simulated_data %>%  mutate(ordinal_nr = row_number())
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf ,y = ordinal_nr,))+
geom_histogram(
stat = 'summary',
fun = mean,
width = 0.5
) +  # Add points
theme_minimal() +  # Use a minimal theme
```
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf ,y = ordinal_nr))+
geom_histogram(
stat = 'summary',
fun = mean,
width = 0.5
) +  # Add points
theme_minimal() +  # Use a minimal theme
```
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf,y = ordinal_nr))+
geom_histogram(
stat = 'summary',
fun = mean,
width = 0.5
) +  # Add points
theme_minimal() +  # Use a minimal theme
```
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
my_simulated_data <- data.frame(asdf = rnorm(n = 100, mean = 30, sd = 18))
my_simulated_data %>%  mutate(ordinal_nr = row_number())
print(my_simulated_data)
my_simulated_data <- mutate(ordinal_nr = row_number())
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
my_simulated_data <- data.frame(asdf = rnorm(n = 100, mean = 30, sd = 18))
my_simulated_data <- mutate(ordinal_nr = row_number())
my_simulated_data <- my_simulated_data %>% mutate(ordinal_nr = row_number())
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
my_simulated_data <- data.frame(asdf = rnorm(n = 100, mean = 30, sd = 18))
my_simulated_data <- my_simulated_data %>% mutate(ordinal_nr = row_number())
print(my_simulated_data)
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf,y = ordinal_nr))+
geom_histogram(
stat = 'summary',
fun = mean,
width = 0.5
) +  # Add points
theme_minimal() +  # Use a minimal theme
# Basic plot with ggplot2
ggplot(my_simulated_data, aes(x = asdf,y = ordinal_nr))+
geom_histogram(
stat = 'summary',
fun = mean,
width = 0.5
) +  # Add points
theme_minimal()
e_mean <- mean(my_simulated_data)
e_sd <- sd(my_simulated_data)
e_mean <- mean(my_simulated_data) %>% print(e_mean)
print(e_mean)
e_mean <- mean(my_simulated_data)
print(e_mean)
e_sd <- sd(my_simulated_data)
View(my_simulated_data)
e_mean <- mean(my_simulated_data[asdf])
e_mean <- mean(my_simulated_data{asdf})
e_mean <- mean(my_simulated_data=asdf)
e_mean <- mean(my_simulated_data$asdf)
print(e_mean)
e_sd <- sd(my_simulated_data$asdf)
print(e-sd)
print(e_sd)
e_mean <- mean(my_simulated_data$asdf)
print(e_mean)
e_sd <- sd(my_simulated_data$asdf)
print(e_sd)
